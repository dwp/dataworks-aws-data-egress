jobs:
  - name: apply-and-test-with-ami
    max_in_flight: 1
    serial_groups: [qa-applies]
    plan:
      - in_parallel:
          - put: meta
            resource: meta-qa
          - get: dw-al2-ecs-ami
            resource: untested-dw-al2-ecs-ami
            trigger: true
          - get: dataworks-aws-data-egress
            passed:
              - qa
          - get: dataworks-behavioural-framework
            trigger: false
      - .: (( inject meta.plan.check-ami-test-results ))
        input_mapping:
          untested_ami: dw-al2-ecs-ami
      - .: (( inject meta.plan.terraform-bootstrap ))
        config:
          params:
            AWS_ACC: ((aws_account.qa))
            TEST_AMI_RUN: true
          inputs:
            - name: previous_success
      - .: (( inject meta.plan.terraform-apply ))
        config:
          params:
            TF_WORKSPACE: qa
            TEST_AMI_RUN: true
          inputs:
            - name: previous_success
      - .: (( inject meta.plan.terraform-plan ))
        config:
          params:
            TF_WORKSPACE: qa
            TEST_AMI_RUN: true
          inputs:
            - name: previous_success
      - .: (( inject meta.plan.cycle-containers ))
        params:
          AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
          CLUSTER: data-egress
          SERVICE: data-egress
      - .: (( inject meta.plan.e2e-tests))
        config:
          params:
            TF_WORKSPACE: qa
            TEST_AMI_RUN: true
            AWS_ACC: ((aws_account.qa))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
          inputs:
            - name: previous_success
      - .: (( inject meta.plan.terminate-ecs-instances ))
      - .: (( inject meta.plan.test-ecs-ami ))
        on_failure:
          do:
            - .: (( inject meta.plan.ami-test-results ))
              task: ami-test-result-fail
              config:
                params:
                  RESULT: FAILED
            - get: dw-al2-ecs-ami-restored
              resource: dw-al2-ecs-ami
              trigger: false
            - .: (( inject meta.plan.terraform-bootstrap ))
              config:
                params:
                  AWS_ACC: ((aws_account.qa))
            - .: (( inject meta.plan.terraform-apply ))
              config:
                params:
                  TF_WORKSPACE: qa
              input_mapping:
                dw-al2-ecs-ami: dw-al2-ecs-ami-restored
            - .: (( inject meta.plan.terraform-plan ))
              config:
                params:
                  TF_WORKSPACE: qa
              input_mapping:
                dw-al2-ecs-ami: dw-al2-ecs-ami-restored
            - .: (( inject meta.plan.cycle-containers ))
              params:
                AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
                CLUSTER: data-egress
                SERVICE: data-egress
        on_success:
          do:
            - .: (( inject meta.plan.ami-test-results ))
              task: ami-test-result-success
              config:
                params:
                  RESULT: SUCCESS
