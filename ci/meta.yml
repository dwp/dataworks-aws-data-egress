 meta:
  plan:
    terraform-common-config:
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.terraform_repository))
            tag: ((dataworks.terraform_version))
        params:
          TF_INPUT: false
          TF_CLI_ARGS_apply: -lock-timeout=300s
          TF_CLI_ARGS_plan: -lock-timeout=300s
          TF_VAR_costcode: ((dataworks.costcode))
    terraform-bootstrap:
      task: terraform-bootstrap
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: dwpdigital/jinja-yaml-aws
            version: 0.0.19
            tag: 0.0.19
        run:
          path: sh
          args:
            - -exc
            - |
              python bootstrap_terraform.py
              sed -i '/^assume_role/ d' terraform.tfvars
              cp terraform.tf ../terraform-bootstrap
              cp terraform.tfvars ../terraform-bootstrap
          dir: dataworks-aws-data-egress
        inputs:
          - name: dataworks-aws-data-egress
        outputs:
          - name: terraform-bootstrap
      params:
        AWS_REGION: eu-west-2
    terraform-apply:
      task: terraform-apply
      .: (( inject meta.plan.terraform-common-config ))
      config:
        run:
          path: sh
          args:
            - -exc
            - |
              export TF_VAR_ecs_hardened_ami_id=$(cat ../dw-al2-ecs-ami/id)
              terraform workspace show
              cp ../terraform-bootstrap/terraform.tf .
              terraform init
              terraform plan -out terraform.plan
              terraform apply -auto-approve terraform.plan
          dir: dataworks-aws-data-egress
        inputs:
          - name: dataworks-aws-data-egress
          - name: terraform-bootstrap
          - name: dw-al2-ecs-ami
      params:
        AWS_REGION: eu-west-2
    terraform-plan:
      task: terraform-plan
      .: (( inject meta.plan.terraform-common-config ))
      config:
        run:
          path: sh
          args:
            - -exc
            - |
              export TF_VAR_ecs_hardened_ami_id=$(cat ../dw-al2-ecs-ami/id)
              cp ../terraform-bootstrap/terraform.tf .
              terraform workspace show
              terraform init
              terraform plan $DETAILED_EXITCODE
          dir: dataworks-aws-data-egress
        inputs:
          - name: dataworks-aws-data-egress
          - name: terraform-bootstrap
          - name: dw-al2-ecs-ami
      params:
        DETAILED_EXITCODE: -detailed-exitcode
        AWS_REGION: eu-west-2

    get-dw-al2-ecs-ami:
      get: dw-al2-ecs-ami
      trigger: true

    terraform-output-ingest:
      task: terraform-output-ingest
      .: (( inject meta.plan.terraform-common-config ))
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.terraform_repository))
            tag: ((dataworks.terraform_version))
        run:
          path: sh
          args:
            - -exc
            - |
              terraform workspace show
              terraform init
              terraform output --json > ../terraform-output-ingest/outputs.json
          dir: aws-ingestion
        inputs:
          - name: aws-ingestion
        outputs:
          - name: terraform-output-ingest

    terraform-output-common-infra:
      task: terraform-output-common-infra
      .: (( inject meta.plan.terraform-common-config ))
      config:
        run:
          path: sh
          args:
            - -exc
            - |
              terraform workspace show
              terraform init
              terraform output --json > ../terraform-output-common-infra/outputs.json
          dir: aws-common-infrastructure
        inputs:
          - name: aws-common-infrastructure
        outputs:
          - name: terraform-output-common-infra

    e2e-tests:
      task: e2e-tests
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_python_boto_behave_repository))
            tag: ((dataworks.docker_python_boto_behave_version))
        params:
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
          NUMBER_OF_TOPICS_TO_USE: "3"
          E2E_TEST_TIMEOUT: 300
          E2E_FEATURE_TAG_FILTER: "@data-egress-s3"
          ASSUME_DURATION: 3600
        run:
          path: sh
          dir: aws-dataworks-e2e-framework
          args:
            - -exc
            - |
              cd src/runners
              ./run-ci.sh \
              "../../../meta" \
              "../../../terraform-output-ingest/outputs.json" \
              "" \
              "" \
              "" \
              "" \
              "" \
              "" \
              "" \
              "../../../terraform-output-common-infra/outputs.json"
        inputs:
          - name: aws-dataworks-e2e-framework
          - name: dataworks-aws-data-egress
          - name: meta
          - name: terraform-output-ingest
          - name: terraform-output-common-infra

